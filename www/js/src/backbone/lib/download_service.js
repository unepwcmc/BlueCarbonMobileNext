// Generated by CoffeeScript 1.9.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.DownloadService = (function() {
    var MAX_ZOOM_LEVEL;

    MAX_ZOOM_LEVEL = 17;

    function DownloadService(_at_area) {
      this.area = _at_area;
      this.downloadHabitatTiles = __bind(this.downloadHabitatTiles, this);
    }

    DownloadService.prototype.downloadBaseLayer = function(offlineLayer) {
      return new Promise(function(resolve, reject) {
        return offlineLayer.saveTiles(MAX_ZOOM_LEVEL, null, resolve, reject);
      });
    };

    DownloadService.prototype.downloadHabitats = function() {
      return new Promise((function(_this) {
        return function(resolve, reject) {
          var layers;
          layers = _this.area.get('mbtiles');
          return async.map(layers, _this.downloadHabitatTiles, function(err, results) {
            if (err != null) {
              return reject(err);
            }
            return resolve(results);
          });
        };
      })(this));
    };

    DownloadService.prototype.downloadHabitatTiles = function(layer, callback) {
      var ft, success;
      success = function(fileEntry) {
        return callback(null, fileEntry);
      };
      ft = new FileTransfer();
      return ft.download(layer.url, this.filenameForLayer(layer), success, callback);
    };

    DownloadService.prototype.filenameForLayer = function(layer) {
      var name;
      name = "" + cordova.file.documentsDirectory;
      return name += (this.area.get('id')) + "-" + layer.habitat + ".mbtiles";
    };

    return DownloadService;

  })();

}).call(this);
