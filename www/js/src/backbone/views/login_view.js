// Generated by CoffeeScript 1.7.1
(function() {
  var _base,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.BlueCarbon || (window.BlueCarbon = {});

  (_base = window.BlueCarbon).Views || (_base.Views = {});

  BlueCarbon.Views.LoginView = (function(_super) {
    __extends(LoginView, _super);

    function LoginView() {
      this.login = __bind(this.login, this);
      return LoginView.__super__.constructor.apply(this, arguments);
    }

    LoginView.prototype.template = JST['area/login'];

    LoginView.prototype.className = 'login';

    LoginView.prototype.events = {
      "click #login": "login"
    };

    LoginView.prototype.login = function() {
      if (navigator.connection.type === Connection.NONE) {
        alert("You are currently offline, please connect to the internet to login");
        return false;
      }
      $('#login-form .loading-spinner').show();
      return this.model.login($('#login-form').serializeObject(), {
        success: (function(_this) {
          return function(data) {
            $('#login-form .loading-spinner').hide();
            return _this.model.trigger('user:loggedIn', _this.model);
          };
        })(this),
        error: (function(_this) {
          return function(data) {
            $('#login-form .loading-spinner').hide();
            return _this.showError('Unable to login');
          };
        })(this)
      });
    };

    LoginView.prototype.render = function() {
      this.$el.html(this.template());
      return this;
    };

    LoginView.prototype.showError = function(message) {
      $('.error').text(message);
      return $('.error').slideDown();
    };

    return LoginView;

  })(Backbone.View);

}).call(this);
