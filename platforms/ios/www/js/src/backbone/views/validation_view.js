// Generated by CoffeeScript 1.9.0
(function() {
  var _base,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  window.BlueCarbon || (window.BlueCarbon = {});

  (_base = window.BlueCarbon).Views || (_base.Views = {});

  BlueCarbon.Views.ValidationView = (function(_super) {
    __extends(ValidationView, _super);

    function ValidationView() {
      this["delete"] = __bind(this["delete"], this);
      this.hideDetails = __bind(this.hideDetails, this);
      this.toggleDetails = __bind(this.toggleDetails, this);
      this.render = __bind(this.render, this);
      return ValidationView.__super__.constructor.apply(this, arguments);
    }

    ValidationView.prototype.template = JST['area/validation'];

    ValidationView.prototype.tagName = 'li';

    ValidationView.prototype.events = {
      "click .delete-validation": "delete",
      "touchstart .validation-title": "toggleDetails"
    };

    ValidationView.prototype.initialize = function(options) {
      var polyOptions;
      this.detailsVisible = false;
      this.validation = options.validation;
      this.validation.on('destroy', (function(_this) {
        return function() {
          return _this.close();
        };
      })(this));
      BlueCarbon.bus.on('validation-views:hideDetails', this.hideDetails);
      this.map = window.blueCarbonApp.map;
      polyOptions = {};
      if (this.validation.get('action') === 'delete') {
        polyOptions = {
          color: "#FF0000",
          strokeColor: "#FF0000"
        };
      }
      return this.mapPolygon = new L.Polygon(this.validation.geomAsLatLngArray(), polyOptions);
    };

    ValidationView.prototype.render = function() {
      this.$el.html(this.template({
        validation: this.validation,
        humanAttributes: this.validation.getHumanAttributes()
      }));
      this.mapPolygon.addTo(this.map);
      return this;
    };

    ValidationView.prototype.toggleDetails = function() {
      if (this.detailsVisible) {
        return this.hideDetails();
      } else {
        BlueCarbon.bus.trigger('validation-views:hideDetails');
        this.$el.find('.validation-details').slideDown();
        this.showHighlightPolygon();
        return this.detailsVisible = true;
      }
    };

    ValidationView.prototype.hideDetails = function() {
      if (this.detailsVisible) {
        this.$el.find('.validation-details').slideUp();
        this.removeHighlightPolygon();
        return this.detailsVisible = false;
      }
    };

    ValidationView.prototype.showHighlightPolygon = function() {
      if (this.highlightPolygon == null) {
        this.highlightPolygon = new L.Polygon(this.validation.geomAsLatLngArray(), {
          opacity: 0.9,
          color: '#00FFFF',
          fillColor: '#00FFFF'
        });
        return this.highlightPolygon.addTo(this.map);
      }
    };

    ValidationView.prototype.removeHighlightPolygon = function() {
      if (this.highlightPolygon != null) {
        this.map.removeLayer(this.highlightPolygon);
        return delete this.highlightPolygon;
      }
    };

    ValidationView.prototype["delete"] = function() {
      if (confirm('are you sure you want to delete this validation?')) {
        return this.validation.localDestroy();
      }
    };

    ValidationView.prototype.onClose = function() {
      this.map.removeLayer(this.mapPolygon);
      this.removeHighlightPolygon();
      return BlueCarbon.bus.off('validation-views:hideDetails', this.hideDetails);
    };

    return ValidationView;

  })(Backbone.View);

}).call(this);
